// @generated by protobuf-ts 2.11.1
// @generated from protobuf file "roasted_octocat.proto" (package "roastedoctocat", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { OctoRoasterAPI } from "./roasted_octocat";
import type { GetParsedGithubResultResponse } from "./roasted_octocat";
import type { GetParsedGithubResultRequest } from "./roasted_octocat";
import type { ParseGithubResponse } from "./roasted_octocat";
import type { ParseGithubRequest } from "./roasted_octocat";
import type { WhoAmIResponse } from "./roasted_octocat";
import type { WhoAmIRequest } from "./roasted_octocat";
import type { RefreshRequest } from "./roasted_octocat";
import type { OAuthResponse } from "./roasted_octocat";
import type { OAuthRequest } from "./roasted_octocat";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { PingResponse } from "./roasted_octocat";
import type { PingRequest } from "./roasted_octocat";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service roastedoctocat.OctoRoasterAPI
 */
export interface IOctoRoasterAPIClient {
    /**
     * @generated from protobuf rpc: Ping
     */
    ping(input: PingRequest, options?: RpcOptions): UnaryCall<PingRequest, PingResponse>;
    /**
     * @generated from protobuf rpc: OAuth
     */
    oAuth(input: OAuthRequest, options?: RpcOptions): UnaryCall<OAuthRequest, OAuthResponse>;
    /**
     * @generated from protobuf rpc: Refresh
     */
    refresh(input: RefreshRequest, options?: RpcOptions): UnaryCall<RefreshRequest, OAuthResponse>;
    /**
     * @generated from protobuf rpc: WhoAmI
     */
    whoAmI(input: WhoAmIRequest, options?: RpcOptions): UnaryCall<WhoAmIRequest, WhoAmIResponse>;
    /**
     * @generated from protobuf rpc: ParseGithub
     */
    parseGithub(input: ParseGithubRequest, options?: RpcOptions): UnaryCall<ParseGithubRequest, ParseGithubResponse>;
    /**
     * @generated from protobuf rpc: GetParsedGithubResult
     */
    getParsedGithubResult(input: GetParsedGithubResultRequest, options?: RpcOptions): UnaryCall<GetParsedGithubResultRequest, GetParsedGithubResultResponse>;
}
/**
 * @generated from protobuf service roastedoctocat.OctoRoasterAPI
 */
export class OctoRoasterAPIClient implements IOctoRoasterAPIClient, ServiceInfo {
    typeName = OctoRoasterAPI.typeName;
    methods = OctoRoasterAPI.methods;
    options = OctoRoasterAPI.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Ping
     */
    ping(input: PingRequest, options?: RpcOptions): UnaryCall<PingRequest, PingResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<PingRequest, PingResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: OAuth
     */
    oAuth(input: OAuthRequest, options?: RpcOptions): UnaryCall<OAuthRequest, OAuthResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<OAuthRequest, OAuthResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Refresh
     */
    refresh(input: RefreshRequest, options?: RpcOptions): UnaryCall<RefreshRequest, OAuthResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<RefreshRequest, OAuthResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: WhoAmI
     */
    whoAmI(input: WhoAmIRequest, options?: RpcOptions): UnaryCall<WhoAmIRequest, WhoAmIResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<WhoAmIRequest, WhoAmIResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ParseGithub
     */
    parseGithub(input: ParseGithubRequest, options?: RpcOptions): UnaryCall<ParseGithubRequest, ParseGithubResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<ParseGithubRequest, ParseGithubResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetParsedGithubResult
     */
    getParsedGithubResult(input: GetParsedGithubResultRequest, options?: RpcOptions): UnaryCall<GetParsedGithubResultRequest, GetParsedGithubResultResponse> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetParsedGithubResultRequest, GetParsedGithubResultResponse>("unary", this._transport, method, opt, input);
    }
}
